import { Injectable, Component, NgModule } from '@angular/core';
import { Subject } from 'rxjs';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function AlertsComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 3);
    ɵngcc0.ɵɵelementStart(2, "i", 4);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 5);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 6);
    ɵngcc0.ɵɵelementStart(7, "a", 7);
    ɵngcc0.ɵɵlistener("click", function AlertsComponent_div_2_Template_a_click_7_listener() { ɵngcc0.ɵɵrestoreView(_r3); const message_r1 = ctx.$implicit; const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.removeMessage(message_r1); });
    ɵngcc0.ɵɵtext(8, "X");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const message_r1 = ctx.$implicit;
    ɵngcc0.ɵɵclassMapInterpolate1("alertsRow ", message_r1.type, "");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(message_r1.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(message_r1.message);
} }
var /** @type {?} */ AlertsConfigData = {};
AlertsConfigData["error"] = {
    icon: 'error'
};
AlertsConfigData["success"] = {
    icon: 'done'
};
AlertsConfigData["DefaultSettings"] = {
    icon: 'error',
    timeout: 3
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class AlertsService {
    constructor() {
        // Observable alerts
        this.alertsSubject = new Subject();
    }
    /**
     * @param {?} message
     * @param {?} type
     * @return {?}
     */
    setMessage(message, type) {
        this.alertsSubject.next({ message: message, type: type });
    }
    /**
     * @return {?}
     */
    getSubject() {
        return this.alertsSubject.asObservable();
    }
    /**
     * @param {?} messagetype
     * @param {?} key
     * @return {?}
     */
    getConfig(messagetype, key) {
        if (typeof AlertsConfigData[messagetype] == 'undefined') {
            return AlertsConfigData["DefaultSettings"][key];
        }
        else {
            return (typeof AlertsConfigData[messagetype][key] != 'undefined') ? AlertsConfigData[messagetype][key] : AlertsConfigData["DefaultSettings"][key];
        }
    }
    /**
     * @param {?} messagetype
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    setConfig(messagetype, key, value) {
        if (typeof AlertsConfigData[messagetype] == 'undefined') {
            AlertsConfigData[messagetype] = {};
        }
        AlertsConfigData[messagetype][key] = value;
    }
    /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    setDefaults(key, value) {
        AlertsConfigData["DefaultSettings"][key] = value;
    }
}
AlertsService.ɵfac = function AlertsService_Factory(t) { return new (t || AlertsService)(); };
AlertsService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AlertsService, factory: AlertsService.ɵfac });
/** @nocollapse */
AlertsService.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AlertsService, [{
        type: Injectable
    }], function () { return []; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class AlertsComponent {
    /**
     * @param {?} alerts
     */
    constructor(alerts) {
        this.alerts = alerts;
        this.messages = [];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.alerts.getSubject().subscribe((object) => {
            object["icon"] = this.alerts.getConfig(object.type, 'icon');
            this.timeout = this.alerts.getConfig(object.type, 'timeout');
            console.log('this.timeout', this.timeout);
            this.messages.push(object);
            if (this.timeout > 0) {
                setTimeout(() => {
                    this.removeMessage(object);
                }, this.timeout * 1000);
            }
        });
    }
    /**
     * @param {?} message
     * @return {?}
     */
    removeMessage(message) {
        this.messages.splice(this.messages.indexOf(message), 1);
    }
}
AlertsComponent.ɵfac = function AlertsComponent_Factory(t) { return new (t || AlertsComponent)(ɵngcc0.ɵɵdirectiveInject(AlertsService)); };
AlertsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AlertsComponent, selectors: [["app-alerts"]], decls: 3, vars: 1, consts: [["href", "https://fonts.googleapis.com/icon?family=Material+Icons", "rel", "stylesheet"], [1, "alertsContainer"], [3, "class", 4, "ngFor", "ngForOf"], [1, "iconpanel"], [1, "mat-icon", "material-icons"], [1, "messagepanel"], [1, "closeicon"], ["href", "#", 3, "click"]], template: function AlertsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "link", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, AlertsComponent_div_2_Template, 9, 5, "div", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.messages);
    } }, directives: [ɵngcc1.NgForOf], styles: [".alertsContainer[_ngcontent-%COMP%]{position:absolute;top:10px;right:20px}.alertsContainer[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%]{padding-top:36%}.alertsContainer[_ngcontent-%COMP%]   .alertsRow[_ngcontent-%COMP%]{margin-top:12px;transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);border-radius:2px;transition:3s opacity 0;float:left;clear:both}.alertsContainer[_ngcontent-%COMP%]   .alertsRow[_ngcontent-%COMP%]   .iconpanel[_ngcontent-%COMP%]{float:left;width:50px;padding:15px;text-align:center;height:51px}.alertsContainer[_ngcontent-%COMP%]   .alertsRow[_ngcontent-%COMP%]   .messagepanel[_ngcontent-%COMP%]{float:left;height:41px;padding:20px;text-align:left;max-width:353px;width:350px}.alertsContainer[_ngcontent-%COMP%]   .alertsRow[_ngcontent-%COMP%]   .closeicon[_ngcontent-%COMP%]{position:absolute;top:10px;right:10px;display:none;text-decoration:none}.alertsContainer[_ngcontent-%COMP%]   .alertsRow[_ngcontent-%COMP%]:hover   .closeicon[_ngcontent-%COMP%]{display:block}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.error[_ngcontent-%COMP%]{border:1px solid #d80202}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.error[_ngcontent-%COMP%]   .iconpanel[_ngcontent-%COMP%]{background:#d80202}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.error[_ngcontent-%COMP%]   .messagepanel[_ngcontent-%COMP%]{color:#000;background:#fff}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.error[_ngcontent-%COMP%]   .closeicon[_ngcontent-%COMP%]{color:#000}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.error[_ngcontent-%COMP%]   .closeicon[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#000;text-decoration:none;font-size:12px}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.success[_ngcontent-%COMP%]{border:1px solid #27b235}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.success[_ngcontent-%COMP%]   .iconpanel[_ngcontent-%COMP%]{background:#27b235;color:#fff}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.success[_ngcontent-%COMP%]   .messagepanel[_ngcontent-%COMP%]{color:#000;background:#fff}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.success[_ngcontent-%COMP%]   .closeicon[_ngcontent-%COMP%]{color:#000}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.success[_ngcontent-%COMP%]   .closeicon[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#000;text-decoration:none;font-size:12px}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.warn[_ngcontent-%COMP%]{border:1px solid #ffc549}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.warn[_ngcontent-%COMP%]   .iconpanel[_ngcontent-%COMP%]{background:#ffc549;color:#fff}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.warn[_ngcontent-%COMP%]   .messagepanel[_ngcontent-%COMP%]{color:#000;background:#fff}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.warn[_ngcontent-%COMP%]   .closeicon[_ngcontent-%COMP%]{color:#000}.alertsContainer[_ngcontent-%COMP%]   .alertsRow.warn[_ngcontent-%COMP%]   .closeicon[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#000;text-decoration:none;font-size:12px}"] });
/** @nocollapse */
AlertsComponent.ctorParameters = () => [
    { type: AlertsService, },
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AlertsComponent, [{
        type: Component,
        args: [{
                selector: 'app-alerts',
                template: `<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<div  class="alertsContainer">
	<div class="alertsRow {{message.type}}" *ngFor="let message of messages">
		<div class="iconpanel"><i class="mat-icon material-icons">{{message.icon}}</i></div>
		<div class="messagepanel">{{message.message}}</div>
		<div class="closeicon"><a (click)="removeMessage(message)" href="#">X</a></div>
  	</div>
</div>`,
                styles: [`.alertsContainer{position:absolute;top:10px;right:20px}.alertsContainer .material-icons{padding-top:36%}.alertsContainer .alertsRow{margin-top:12px;transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);border-radius:2px;transition:3s opacity 0;float:left;clear:both}.alertsContainer .alertsRow .iconpanel{float:left;width:50px;padding:15px;text-align:center;height:51px}.alertsContainer .alertsRow .messagepanel{float:left;height:41px;padding:20px;text-align:left;max-width:353px;width:350px}.alertsContainer .alertsRow .closeicon{position:absolute;top:10px;right:10px;display:none;text-decoration:none}.alertsContainer .alertsRow:hover .closeicon{display:block}.alertsContainer .alertsRow.error{border:1px solid #d80202}.alertsContainer .alertsRow.error .iconpanel{background:#d80202}.alertsContainer .alertsRow.error .messagepanel{color:#000;background:#fff}.alertsContainer .alertsRow.error .closeicon{color:#000}.alertsContainer .alertsRow.error .closeicon a{color:#000;text-decoration:none;font-size:12px}.alertsContainer .alertsRow.success{border:1px solid #27b235}.alertsContainer .alertsRow.success .iconpanel{background:#27b235;color:#fff}.alertsContainer .alertsRow.success .messagepanel{color:#000;background:#fff}.alertsContainer .alertsRow.success .closeicon{color:#000}.alertsContainer .alertsRow.success .closeicon a{color:#000;text-decoration:none;font-size:12px}.alertsContainer .alertsRow.warn{border:1px solid #ffc549}.alertsContainer .alertsRow.warn .iconpanel{background:#ffc549;color:#fff}.alertsContainer .alertsRow.warn .messagepanel{color:#000;background:#fff}.alertsContainer .alertsRow.warn .closeicon{color:#000}.alertsContainer .alertsRow.warn .closeicon a{color:#000;text-decoration:none;font-size:12px}`]
            }]
    }], function () { return [{ type: AlertsService }]; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class AlertsModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: AlertsModule,
            providers: [AlertsService]
        };
    }
}
AlertsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AlertsModule });
AlertsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AlertsModule_Factory(t) { return new (t || AlertsModule)(); }, imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AlertsModule, { declarations: function () { return [AlertsComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [AlertsComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AlertsModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    AlertsComponent
                ],
                exports: [
                    AlertsComponent
                ]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { AlertsService, AlertsComponent, AlertsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnRzLmpzIiwic291cmNlcyI6WyJuZzovYWxlcnRzL2xpYi9hbGVydHMuY29uZmlnLnRzIiwibmc6L2FsZXJ0cy9saWIvYWxlcnRzLnNlcnZpY2UudHMiLCJuZzovYWxlcnRzL2xpYi9hbGVydHMuY29tcG9uZW50LnRzIiwibmc6L2FsZXJ0cy9saWIvYWxlcnRzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSU8scUJBQUksZ0JBQWdCLEdBQWUsRUFBRSxDQUFDO0FBRTdDLGdCQUFnQixZQUFTO0FBQ3pCLElBQUMsSUFBSSxFQUFFLE9BQU87QUFDZCxDQUFDLENBQUM7QUFFRixnQkFBZ0IsY0FBVztBQUMzQixJQUFDLElBQUksRUFBRSxNQUFNO0FBQ2IsQ0FBQyxDQUFDO0FBRUYsZ0JBQWdCLHNCQUFtQjtBQUNuQyxJQUFDLElBQUksRUFBRSxPQUFPO0FBQ2QsSUFBQyxPQUFPLEVBQUUsQ0FBQztBQUNYLENBQUMsQ0FBQztBQUFDO0FBQUM7QUFBSTtBQUFrQztBQUF5QztBQ2pCbkY7QUFBc0IsSUFtQnBCO0FBQ0Y7QUFFd0IsNkJBTE4sSUFBSSxPQUFPLEVBQVU7QUFDdkMsS0FFRztBQUNIO0FBQ087QUFDSjtBQUF1QjtBQUFtQjtBQUN0QyxJQURMLFVBQVUsQ0FBQyxPQUFlLEVBQUUsSUFBWTtBQUMxQyxRQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUMsT0FBTyxFQUFDLE9BQU8sRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFDLENBQUMsQ0FBQztBQUN6RCxLQUFHO0FBQ0g7QUFDTztBQUNIO0FBQVEsSUFEVixVQUFVO0FBQUssUUFDYixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsWUFBWSxFQUFFLENBQUM7QUFDN0MsS0FBRztBQUNIO0FBQ087QUFBOEI7QUFDbkM7QUFBbUI7QUFBUSxJQUQzQixTQUFTLENBQUMsV0FBbUIsRUFBRSxHQUFXO0FBQUks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QUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQW5DQSxBQUFBLEFDYkEsQUEwQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUZBLEFBQUEsQUFJQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBbkNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBT0EsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQXJCQSxBQUFBLEFDREEsQUFvQkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBakJBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBDb25maWdEYXRhIHtcblx0W2tleTogc3RyaW5nXTogYW55O1xufVxuXG5leHBvcnQgdmFyIEFsZXJ0c0NvbmZpZ0RhdGE6IENvbmZpZ0RhdGEgPSB7fTtcblxuQWxlcnRzQ29uZmlnRGF0YS5lcnJvciA9IHtcblx0aWNvbjogJ2Vycm9yJ1xufTtcblxuQWxlcnRzQ29uZmlnRGF0YS5zdWNjZXNzID0ge1xuXHRpY29uOiAnZG9uZSdcbn07XG5cbkFsZXJ0c0NvbmZpZ0RhdGEuRGVmYXVsdFNldHRpbmdzID0ge1xuXHRpY29uOiAnZXJyb3InLFxuXHR0aW1lb3V0OiAzXG59OyIsImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YmplY3QgfSAgICBmcm9tICdyeGpzJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSAgICBmcm9tICdyeGpzJztcbmltcG9ydCB7IEFsZXJ0c0NvbmZpZ0RhdGEgfSBmcm9tICcuL2FsZXJ0cy5jb25maWcnO1xuXG5cbmV4cG9ydCBpbnRlcmZhY2UgQWxlcnRzSW50ZXJmYWNlIHtcbiAgYWxlcnRzU3ViamVjdDpTdWJqZWN0PE9iamVjdD47XG4gIHNldE1lc3NhZ2UobWVzc2FnZTogc3RyaW5nLCB0eXBlOiBzdHJpbmcpOiB2b2lkO1xuICBnZXRDb25maWcobWVzc2FnZTogc3RyaW5nLCBrZXk6IHN0cmluZyk6IHN0cmluZztcbiAgc2V0Q29uZmlnKG1lc3NhZ2V0eXBlOiBzdHJpbmcsIGtleTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKTogdm9pZDtcbn1cbiBcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBbGVydHNTZXJ2aWNlIGltcGxlbWVudHMgQWxlcnRzSW50ZXJmYWNlICAgIHtcbiBcbiAgLy8gT2JzZXJ2YWJsZSBhbGVydHNcbiAgYWxlcnRzU3ViamVjdCA9IG5ldyBTdWJqZWN0PE9iamVjdD4oKTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIC8vIFNlcnZpY2UgbWVzc2FnZSBjb21tYW5kc1xuICBzZXRNZXNzYWdlKG1lc3NhZ2U6IHN0cmluZywgdHlwZTogc3RyaW5nKSB7XG4gICAgdGhpcy5hbGVydHNTdWJqZWN0Lm5leHQoe21lc3NhZ2U6bWVzc2FnZSx0eXBlOnR5cGV9KTtcbiAgfVxuXG4gIGdldFN1YmplY3QoKTogYW55IHtcbiAgICByZXR1cm4gdGhpcy5hbGVydHNTdWJqZWN0LmFzT2JzZXJ2YWJsZSgpO1xuICB9XG5cbiAgZ2V0Q29uZmlnKG1lc3NhZ2V0eXBlOiBzdHJpbmcsIGtleTogc3RyaW5nKSA6IHN0cmluZyB7XG4gICAgaWYodHlwZW9mIEFsZXJ0c0NvbmZpZ0RhdGFbbWVzc2FnZXR5cGVdID09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBBbGVydHNDb25maWdEYXRhLkRlZmF1bHRTZXR0aW5nc1trZXldO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiAodHlwZW9mIEFsZXJ0c0NvbmZpZ0RhdGFbbWVzc2FnZXR5cGVdW2tleV0gIT0gJ3VuZGVmaW5lZCcpID8gQWxlcnRzQ29uZmlnRGF0YVttZXNzYWdldHlwZV1ba2V5XTogQWxlcnRzQ29uZmlnRGF0YS5EZWZhdWx0U2V0dGluZ3Nba2V5XTtcbiAgICB9ICAgICAgXG4gIH1cblxuICBzZXRDb25maWcobWVzc2FnZXR5cGU6IHN0cmluZywga2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZih0eXBlb2YgQWxlcnRzQ29uZmlnRGF0YVttZXNzYWdldHlwZV0gPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgQWxlcnRzQ29uZmlnRGF0YVttZXNzYWdldHlwZV0gPSB7fTtcbiAgICB9XG4gICAgQWxlcnRzQ29uZmlnRGF0YVttZXNzYWdldHlwZV1ba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgc2V0RGVmYXVsdHMoa2V5OiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgICBBbGVydHNDb25maWdEYXRhLkRlZmF1bHRTZXR0aW5nc1trZXldID0gdmFsdWU7ICAgIFxuICB9XG5cbn0iLCJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWxlcnRzU2VydmljZSB9IGZyb20gJy4vYWxlcnRzLnNlcnZpY2UnO1xuXG5cblxuZXhwb3J0IGludGVyZmFjZSBNZXNzYWdlIHtcbiAgbWVzc2FnZTogc3RyaW5nO1xuICB0eXBlOiBzdHJpbmc7XG4gIFtrZXk6IHN0cmluZ106IHN0cmluZztcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYXBwLWFsZXJ0cycsXG4gIHRlbXBsYXRlOiBgPGxpbmsgaHJlZj1cImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vaWNvbj9mYW1pbHk9TWF0ZXJpYWwrSWNvbnNcIiByZWw9XCJzdHlsZXNoZWV0XCI+XG48ZGl2ICBjbGFzcz1cImFsZXJ0c0NvbnRhaW5lclwiPlxuXHQ8ZGl2IGNsYXNzPVwiYWxlcnRzUm93IHt7bWVzc2FnZS50eXBlfX1cIiAqbmdGb3I9XCJsZXQgbWVzc2FnZSBvZiBtZXNzYWdlc1wiPlxuXHRcdDxkaXYgY2xhc3M9XCJpY29ucGFuZWxcIj48aSBjbGFzcz1cIm1hdC1pY29uIG1hdGVyaWFsLWljb25zXCI+e3ttZXNzYWdlLmljb259fTwvaT48L2Rpdj5cblx0XHQ8ZGl2IGNsYXNzPVwibWVzc2FnZXBhbmVsXCI+e3ttZXNzYWdlLm1lc3NhZ2V9fTwvZGl2PlxuXHRcdDxkaXYgY2xhc3M9XCJjbG9zZWljb25cIj48YSAoY2xpY2spPVwicmVtb3ZlTWVzc2FnZShtZXNzYWdlKVwiIGhyZWY9XCIjXCI+WDwvYT48L2Rpdj5cbiAgXHQ8L2Rpdj5cbjwvZGl2PmAsXG4gIHN0eWxlczogW2AuYWxlcnRzQ29udGFpbmVye3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxMHB4O3JpZ2h0OjIwcHh9LmFsZXJ0c0NvbnRhaW5lciAubWF0ZXJpYWwtaWNvbnN7cGFkZGluZy10b3A6MzYlfS5hbGVydHNDb250YWluZXIgLmFsZXJ0c1Jvd3ttYXJnaW4tdG9wOjEycHg7dHJhbnNpdGlvbjpib3gtc2hhZG93IDI4MG1zIGN1YmljLWJlemllciguNCwwLC4yLDEpO2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246cmVsYXRpdmU7Ym94LXNoYWRvdzowIDNweCAxcHggLTJweCByZ2JhKDAsMCwwLC4yKSwwIDJweCAycHggMCByZ2JhKDAsMCwwLC4xNCksMCAxcHggNXB4IDAgcmdiYSgwLDAsMCwuMTIpO2JvcmRlci1yYWRpdXM6MnB4O3RyYW5zaXRpb246M3Mgb3BhY2l0eSAwO2Zsb2F0OmxlZnQ7Y2xlYXI6Ym90aH0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cgLmljb25wYW5lbHtmbG9hdDpsZWZ0O3dpZHRoOjUwcHg7cGFkZGluZzoxNXB4O3RleHQtYWxpZ246Y2VudGVyO2hlaWdodDo1MXB4fS5hbGVydHNDb250YWluZXIgLmFsZXJ0c1JvdyAubWVzc2FnZXBhbmVse2Zsb2F0OmxlZnQ7aGVpZ2h0OjQxcHg7cGFkZGluZzoyMHB4O3RleHQtYWxpZ246bGVmdDttYXgtd2lkdGg6MzUzcHg7d2lkdGg6MzUwcHh9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93IC5jbG9zZWljb257cG9zaXRpb246YWJzb2x1dGU7dG9wOjEwcHg7cmlnaHQ6MTBweDtkaXNwbGF5Om5vbmU7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93OmhvdmVyIC5jbG9zZWljb257ZGlzcGxheTpibG9ja30uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cuZXJyb3J7Ym9yZGVyOjFweCBzb2xpZCAjZDgwMjAyfS5hbGVydHNDb250YWluZXIgLmFsZXJ0c1Jvdy5lcnJvciAuaWNvbnBhbmVse2JhY2tncm91bmQ6I2Q4MDIwMn0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cuZXJyb3IgLm1lc3NhZ2VwYW5lbHtjb2xvcjojMDAwO2JhY2tncm91bmQ6I2ZmZn0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cuZXJyb3IgLmNsb3NlaWNvbntjb2xvcjojMDAwfS5hbGVydHNDb250YWluZXIgLmFsZXJ0c1Jvdy5lcnJvciAuY2xvc2VpY29uIGF7Y29sb3I6IzAwMDt0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXNpemU6MTJweH0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cuc3VjY2Vzc3tib3JkZXI6MXB4IHNvbGlkICMyN2IyMzV9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93LnN1Y2Nlc3MgLmljb25wYW5lbHtiYWNrZ3JvdW5kOiMyN2IyMzU7Y29sb3I6I2ZmZn0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cuc3VjY2VzcyAubWVzc2FnZXBhbmVse2NvbG9yOiMwMDA7YmFja2dyb3VuZDojZmZmfS5hbGVydHNDb250YWluZXIgLmFsZXJ0c1Jvdy5zdWNjZXNzIC5jbG9zZWljb257Y29sb3I6IzAwMH0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cuc3VjY2VzcyAuY2xvc2VpY29uIGF7Y29sb3I6IzAwMDt0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXNpemU6MTJweH0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cud2Fybntib3JkZXI6MXB4IHNvbGlkICNmZmM1NDl9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93Lndhcm4gLmljb25wYW5lbHtiYWNrZ3JvdW5kOiNmZmM1NDk7Y29sb3I6I2ZmZn0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cud2FybiAubWVzc2FnZXBhbmVse2NvbG9yOiMwMDA7YmFja2dyb3VuZDojZmZmfS5hbGVydHNDb250YWluZXIgLmFsZXJ0c1Jvdy53YXJuIC5jbG9zZWljb257Y29sb3I6IzAwMH0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cud2FybiAuY2xvc2VpY29uIGF7Y29sb3I6IzAwMDt0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXNpemU6MTJweH1gXVxufSlcbmV4cG9ydCBjbGFzcyBBbGVydHNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBwdWJsaWMgbWVzc2FnZXM6IE9iamVjdFtdID0gW107XG4gIHB1YmxpYyB0aW1lb3V0OiBhbnk7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYWxlcnRzOiBBbGVydHNTZXJ2aWNlKSB7IFxuXG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmFsZXJ0cy5nZXRTdWJqZWN0KCkuc3Vic2NyaWJlKCAob2JqZWN0OiBNZXNzYWdlKSA9PiB7XG4gICAgICAgIG9iamVjdC5pY29uID0gdGhpcy5hbGVydHMuZ2V0Q29uZmlnKG9iamVjdC50eXBlLCdpY29uJyk7XG4gICAgICAgIHRoaXMudGltZW91dCA9IHRoaXMuYWxlcnRzLmdldENvbmZpZyhvYmplY3QudHlwZSwndGltZW91dCcpOyAgICBcbiAgICAgICAgY29uc29sZS5sb2coJ3RoaXMudGltZW91dCcsdGhpcy50aW1lb3V0KTtcbiAgICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKG9iamVjdCk7XG4gICAgICAgIGlmKHRoaXMudGltZW91dCA+IDApIHtcbiAgICAgICAgICBzZXRUaW1lb3V0KCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJlbW92ZU1lc3NhZ2Uob2JqZWN0KTtcbiAgICAgICAgICB9LHRoaXMudGltZW91dCAqIDEwMDApO1xuICAgICAgICB9XG4gICAgICB9KTsgICAgXG4gIH1cblxuICByZW1vdmVNZXNzYWdlKG1lc3NhZ2U6IE9iamVjdCkge1xuICAgICAgdGhpcy5tZXNzYWdlcy5zcGxpY2UodGhpcy5tZXNzYWdlcy5pbmRleE9mKG1lc3NhZ2UpLDEpO1xuICB9XG5cbn0iLCJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEFsZXJ0c0NvbXBvbmVudCB9IGZyb20gJy4vYWxlcnRzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBbGVydHNTZXJ2aWNlIH0gZnJvbSAnLi9hbGVydHMuc2VydmljZSc7XG5cbmV4cG9ydCAqIGZyb20gJy4vYWxlcnRzLmNvbXBvbmVudCc7XG5leHBvcnQgKiBmcm9tICcuL2FsZXJ0cy5zZXJ2aWNlJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZVxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBBbGVydHNDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIEFsZXJ0c0NvbXBvbmVudFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEFsZXJ0c01vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQWxlcnRzTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbQWxlcnRzU2VydmljZV1cbiAgICB9O1xuICB9XG59XG4iXX0=